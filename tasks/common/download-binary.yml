---
- name: Ensure destination directory [{{ destination_directory }}] exists
  ansible.builtin.file:
    path: "{{ destination_directory }}"
    state: directory
    mode: "0755"

- name: Set binary file name and paths for [{{ binary_url }}]
  ansible.builtin.set_fact:
    binary_file_name: "{{ binary_url | basename }}"
    binary_file_path: "/tmp/{{ binary_url | basename }}"
    target_binary_path: "{{ destination_directory }}/{{ binary_file_name_override | default(binary_url | basename) }}"

- name: Download the binary file from [{{ binary_url }}] to [{{ binary_file_path }}]
  ansible.builtin.get_url:
    url: "{{ binary_url }}"
    dest: "{{ binary_file_path }}"
    mode: "0755"

- name: Handle binary file [{{ binary_file_name }}] based on type
  block:
    - name: Extract archive [{{ binary_file_name }}] to [{{ destination_directory }}]
      ansible.builtin.unarchive:
        src: "{{ binary_file_path }}"
        dest: "{{ destination_directory }}"
        remote_src: true
        extra_opts:
          - "--strip-components={{ binary_strip_components }}"
      when: binary_file_name | regex_search('\.(tar|tar\.gz|tgz|zip)$')

    - name: Move binary file [{{ binary_file_name }}] to [{{ target_binary_path }}]
      ansible.builtin.command: >
        mv {{ binary_file_path }} {{ target_binary_path }}
      register: mv_output
      changed_when: mv_output.rc != 0
      when: not (binary_file_name | regex_search('\.(tar|tar\.gz|tgz|zip)$'))

- name: Check if the binary override file [{{ binary_file_name_override }}] exists at [{{ destination_directory }}]
  ansible.builtin.stat:
    path: "{{ destination_directory }}/{{ binary_file_name_override }}"
  register: binary_override_file_stat
  when:
    - binary_file_name_override is defined

- name: Fail if override binary file [{{ binary_file_name_override }}] is missing at [{{ destination_directory }}]
  ansible.builtin.fail:
    msg: "The binary file does not exist at {{ destination_directory }}/{{ binary_file_name_override }}."
  when:
    - binary_file_name_override is defined
    - not binary_override_file_stat.stat.exists
